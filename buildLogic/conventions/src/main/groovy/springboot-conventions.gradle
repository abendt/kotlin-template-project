plugins {
    id 'module-conventions'

    id 'org.jetbrains.kotlin.plugin.spring'

    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    developmentOnly "org.springframework.boot:spring-boot-devtools"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

testing {
    suites {
        integrationTest(JvmTestSuite) {
            useJUnitJupiter("5.9.1")

            dependencies {
                implementation project()
                implementation 'org.springframework.boot:spring-boot-starter-test'

                implementation("io.kotest.extensions:kotest-extensions-spring:1.1.2") {
                    exclude(group: "io.kotest")
                }
                implementation "com.ninja-squad:springmockk:4.0.0"
                // springBootTestApi(libs.bundles.restassured)
            }
        }
    }
}

/*
    here we override some defaults from the spring-boot-bom

    Relationship between spring-boot plugin and the dependency-management plugin:
    https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#reacting-to-other-plugins.dependency-management

    how to override versions from the bom:
    https://docs.spring.io/dependency-management-plugin/docs/current-SNAPSHOT/reference/html/#dependency-management-configuration-bom-import-override

    spring-boot bom for reference (check the version):
    https://central.sonatype.dev/artifact/org.springframework.boot/spring-boot-dependencies/3.0.1
 */
ext["junit-jupiter.version"] = libs.versions.junit.get()
ext["jackson-bom.version"] = libs.versions.jackson.get()
ext["selenium.version"] = libs.versions.selenium.get()